### [Глобальные константы:]  
MAX_WORDS (значение: 1000) – Максимальное количество слов, которые можно 
считать из файла.  
INITIAL_BUFFER_SIZE (значение: 200) – Начальный размер буфера 
для хранения слов.  

---

### [Локальные переменные:]  

#### В функции read_words(FILE* file, char* words) 
count (тип: int) – Количество считанных слов.  
buffer (тип: char[INITIAL_BUFFER_SIZE]) – Временный массив для хранения 
считанной строки.  
len (тип: size_t) – Длина считанной строки (используется для удаления \n).  

---

#### В main(int argc, char* argv[])  
argc (тип: int) – Количество аргументов командной строки.  
argv (тип: char*[]) – Массив строк с аргументами командной строки.  

---

### [Файловые указатели:]  
input_file (тип: FILE*) – Указатель на входной файл с текстом.  
words_file (тип: FILE*) – Указатель на файл со словами, которые нужно заменить.  
replace_file (тип: FILE*) – Указатель на файл со словами-заменами.  
output_file (тип: FILE*) – Указатель на выходной файл, 
в который записывается результат.  

---

### [Динамические массивы для хранения слов:]  
words_to_replace (тип: char) – Указатель на массив строк, содержащий 
слова для замены.  
replacement_words (тип: char) – Указатель на массив строк, содержащий 
слова-заменители.  

---

### [Счетчики количества слов:]  
replace_count (тип: int) – Количество слов, считанных из words_file.  
replacement_count (тип: int) – Количество слов, считанных из replace_file.  

---

### [Буфер и вспомогательные переменные:]  
buffer (тип: char*) – Динамический буфер для накопления текущего слова из 
input_file.  
buf_size (тип: size_t) – Размер выделенной памяти для buffer.  
index (тип: size_t) – Текущая позиция в buffer.  
ch (тип: int) – Символ, считанный из input_file.  
replaced (тип: int) – Флаг (0 или 1), указывающий, было ли слово заменено 
(1 – да, 0 – нет).  
i (тип: int) – Переменная-счётчик для цикла при поиске заменяемых слов.  

---

### [Функционал:]  
- При передаче &words_to_replace и &replacement_words в read_words() 
передаётся указатель на указатель на указатель (char***), 
что позволяет изменять сам массив указателей внутри функции.

- size_t - беззнаковый целочисленный тип, предназначенный для хранения 
размеров объектов в байтах и индексов массивов <stdlib.h>

- *words = malloc(sizeof(char*) * MAX_WORDS);
выделение памяти для массива указателей на строки

*words - сам массив указателей (двумерный)

- fgets(куда пишем, сколько пишем, откуда - поток ввода до символа \n)