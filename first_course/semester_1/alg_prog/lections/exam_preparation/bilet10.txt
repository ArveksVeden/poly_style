## АиП | Билет 10 ##
1. Понятие эффективности алгоритма, различные способы её измерения.
2. Понятие сложности.

===== Понятие сложности алгоритма, различные способы её измерения =====
>> Эффективность алгоритма - это характеристика, отражающая, насколько оптимально алгоритм решает поставленную задачу с точки зрения временных и ресурсных затрат.

1. Критерии эффективности алгоритма:
* Временная сложность
- Время, затраченное на выполнение алгоритма. Измеряется количество элементарных операций, выполняемых в зависимости от размера входных данных.
* Простанственная сложность
- Объем памяти, необходимый для выполнения алгоритма. Учитываются как постоянные, так и переменные затраты.
* Простота реализации
- Читабельность и легкость написания и поддержки алгоритма.
2. Спосбы измерения эффективности:
* Теоретическая оценка
* Анализ временной и пространственной сложности с использованием асимптотических обозначений (например, O(n), O(log n), O(n^2))
* Эмпирическое измерение
- Замер времени выполнения и использования памяти на конкретных данных и оборудовании.
* Моделирование работы
- использование программ-симмуляторов для анализа поведения алгоритма при различных условиях.

===== Понятие сложности =====
>> Сложность алгоритма - это характеристика, которая показывается, как меняются временные и ресурсные затраты алгоритма в зависимости от размера входных данных.
1. Типы сложности:
* Временная сложность - определяет, как увеличивается кол-во операций в зависимости от размера входных данных (n).
Примеры:
- Линейная O(n)
- Логарифмическая O(log n)
- Квадратичная O(n^2)
* Пространственная сложность - определяет, сколько памяти требуется алгоритму
2. Оценка сложности:
* Наилучший случай (минимальное кол-во операций)
* Средний случай (Среднее кол-во операций, необходимое для выполнения)
* Худший случай (Максимальное кол-во операций)

===== Как измерить сложность алгоритма =====
1. Определить основные операции:
- Участки кода, которые выполняются несколько раз (цикли и вложенные циклы)
- Сконцетрируемся на операциях, зависящие от размера входных данных
2. Оцените кол-во итераций:
- Для каждого цикла подсчитайте, сколько раз он выполняется.
- Для вложенных циклов умножьте кол-во итераций внешнего и внутреннего циклов.
3. Учтите вызовы функций:
- Если функция вызывает себя или другие функции, оцените их сложность
- Рекурсивные алгоритмы анализируются с помощью рекуррентных соотношений.
4. Запишите итоговую сложность:
- Испольуем асимптотическую нотацию O для обозначения зависимости кол-во операций от размера входных данных

n = 10:
k = 2
log210