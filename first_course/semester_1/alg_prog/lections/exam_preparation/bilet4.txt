## АиП | Билет - 4 ##
1. Характеристика алгоритмов.
2. Характеристика программ.
3. Характеристика языков программирования.
4. Соответствия между данными характеристиками.

===== Характеристика алгоритмов =====
>> Алгоритм - это конечная последовательность действий, предназначенная для решения задачи.
* Основные свойства алгоритмов:
1. Дискретность - алгоритм состоит из отдельных шагов (команд).
2. Определенность - каждая команда имеет однозначную трактовку.
3. Конечность - Алгоритм завершается за конечное число шагов.
4. Результативность - Алгоритм должен выдавать конкретный результат.
5. Массовость - Алгоритм применяется для решения множества задач одного типа.
* Классификация алгоритмов:
1. По структуре:
- Линейные - шаги выполняются последовательно.
- Разветвляющиеся - выполнение зависит от условий.
- Циклические - шаги повторяются до выполнения условия.
2. По спосоу представления:
- Словесные (описание на естественном языке).
- Графические (блок-схемы).
- Программные (код на языке программирования).

===== Характеристика программ =====
>> Программа - это набор инструкций, написанных на языке программирования, который выполняется ЭВМ для реализации алгоритма.

* Основные свойства программ:
1. Функциональность - программа должна решать задачу в соответствии с требованиями.
2. Корректность - результаты выполнения программы должны соответствовать заданным условиям.
3. Эффективность - минимальное использование ресурсов (время, память).
4. Удобство использования - программа должна быть понятной для пользователя.
5. Переносимость - Возможность выполнения на различных системах с минимальными изменениями.

===== Характеристика языков программирования =====
>> язык программирования - это формальная система записи алгоритмов и данных, предназначенная для общения человека с ЭВМ.
* Основные уровни языков программирования:
1. Низкоуровневые языки:
- Ассемблер - близок к машинным командам.
- Преимущества: высокая производительность, контроль аппаратных ресурсов.
- Недостатки: сложность разработки.
2. Высокоуровневые языки:
- Примеры: C, Python, Java.
- Преимущества: высокая абстрация, минимизация кода.
* Классификация языков:
1. Процедурные:
- Основаны на последовательном выполнении команд (C, Pascal).
2. Объектно-ориентированные:
- Основаны на работе с объектами и классами (C++, Java, Python).
3. Функциональные: 
- Основной акцент на функции (Haskell, Lisp).
4. Логические:
- Основываются на логических утверждениях (Prolog).

===== Соответствие между алгоритмами, программами и языками программирования =====
>> Связь между этими понятиями:
1. Алгоритмы -> Программа:
* Алгоритм преобразуется в программу с помощью языка программирования.
2. Язык программирования -> Программа:
* Программа пишется на языке программирования, который определяет синтакси и семантику
3. Программа -> Реализация алгоритма.
* Программа - это реализация алгоритма, адаптированная для работы на конкретной ЭВМ.

Пример связи:
1. Задача: Найти сумму чисел массива
2. Алгоритм (словесно):
* Инициализировать переменную суммы в ноль.
* Пройти по всем элементам массива, прибавляя каждый к сумме
* Вывести результат.

```
#include <stdio.h>

int main(void)
{
    int arr[10] = {7, 2, -5, 0, 6, 12, -4, 9, 7, 9};
    int sum = 0;

    for (int i = 0, i < 10, i++)
    {
        sum += *(arr + i);
    }
    printf("sum(arr) = %d\n", sum);

    return 0;
}

```
